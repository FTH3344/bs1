{"ast":null,"code":"var _jsxFileName = \"D:\\\\beisong\\\\my-react-app\\\\src\\\\p1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Upload, Button, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst P1 = () => {\n  _s();\n  const [fileContent, setFileContent] = useState('');\n  const handleBeforeUpload = file => {\n    const isTxt = file.type === 'text/plain';\n    if (!isTxt) {\n      message.error('You can only upload text files!');\n      return false;\n    }\n    return isTxt;\n  };\n  const handleFileChange = info => {\n    if (info.file.status === 'done') {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const content = e.target.result;\n        // 确保使用回调函数更新状态\n        setFileContent(prevContent => {\n          return content;\n        });\n      };\n      reader.readAsText(info.file.originFileObj);\n    } else if (info.file.status === 'error') {\n      message.error('File upload failed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Upload, {\n      beforeUpload: handleBeforeUpload,\n      onChange: handleFileChange,\n      accept: \".txt\",\n      showUploadList: false,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 23\n        }, this),\n        children: \"Click to Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"osidf\"\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: fileContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(P1, \"+XNw8NdYZU8ilyTJtLuEa8u+pkk=\");\n_c = P1;\nexport default P1;\nvar _c;\n$RefreshReg$(_c, \"P1\");","map":{"version":3,"names":["React","useState","Upload","Button","message","UploadOutlined","jsxDEV","_jsxDEV","Fragment","_Fragment","P1","_s","fileContent","setFileContent","handleBeforeUpload","file","isTxt","type","error","handleFileChange","info","status","reader","FileReader","onload","e","content","target","result","prevContent","readAsText","originFileObj","children","beforeUpload","onChange","accept","showUploadList","icon","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","_c","$RefreshReg$"],"sources":["D:/beisong/my-react-app/src/p1.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Upload, Button, message } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nconst P1 = () => {\r\n  const [fileContent, setFileContent] = useState('');\r\n\r\n  const handleBeforeUpload = (file) => {\r\n    const isTxt = file.type === 'text/plain';\r\n    if (!isTxt) {\r\n      message.error('You can only upload text files!');\r\n      return false;\r\n    }\r\n    return isTxt;\r\n  };\r\n\r\n  const handleFileChange = (info) => {\r\n    if (info.file.status === 'done') {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const content = e.target.result;\r\n        // 确保使用回调函数更新状态\r\n        setFileContent(prevContent => {\r\n          return content;\r\n        });\r\n      };\r\n      reader.readAsText(info.file.originFileObj);\r\n    } else if (info.file.status === 'error') {\r\n      message.error('File upload failed.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Upload\r\n        beforeUpload={handleBeforeUpload}\r\n        onChange={handleFileChange}\r\n        accept=\".txt\"\r\n        showUploadList={false}\r\n      >\r\n        <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n      </Upload>\r\n      <>osidf</>\r\n      <div style={{ marginTop: '20px' }}>\r\n        <h3>File Content:</h3>\r\n        <pre>{fileContent}</pre>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default P1;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,MAAM,EAAEC,OAAO,QAAQ,MAAM;AAC9C,SAASC,cAAc,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,EAAE,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMa,kBAAkB,GAAIC,IAAI,IAAK;IACnC,MAAMC,KAAK,GAAGD,IAAI,CAACE,IAAI,KAAK,YAAY;IACxC,IAAI,CAACD,KAAK,EAAE;MACVZ,OAAO,CAACc,KAAK,CAAC,iCAAiC,CAAC;MAChD,OAAO,KAAK;IACd;IACA,OAAOF,KAAK;EACd,CAAC;EAED,MAAMG,gBAAgB,GAAIC,IAAI,IAAK;IACjC,IAAIA,IAAI,CAACL,IAAI,CAACM,MAAM,KAAK,MAAM,EAAE;MAC/B,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;QACrB,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACC,MAAM;QAC/B;QACAf,cAAc,CAACgB,WAAW,IAAI;UAC5B,OAAOH,OAAO;QAChB,CAAC,CAAC;MACJ,CAAC;MACDJ,MAAM,CAACQ,UAAU,CAACV,IAAI,CAACL,IAAI,CAACgB,aAAa,CAAC;IAC5C,CAAC,MAAM,IAAIX,IAAI,CAACL,IAAI,CAACM,MAAM,KAAK,OAAO,EAAE;MACvCjB,OAAO,CAACc,KAAK,CAAC,qBAAqB,CAAC;IACtC;EACF,CAAC;EAED,oBACEX,OAAA;IAAAyB,QAAA,gBACEzB,OAAA,CAACL,MAAM;MACL+B,YAAY,EAAEnB,kBAAmB;MACjCoB,QAAQ,EAAEf,gBAAiB;MAC3BgB,MAAM,EAAC,MAAM;MACbC,cAAc,EAAE,KAAM;MAAAJ,QAAA,eAEtBzB,OAAA,CAACJ,MAAM;QAACkC,IAAI,eAAE9B,OAAA,CAACF,cAAc;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAAAT,QAAA,EAAC;MAAe;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACTlC,OAAA,CAAAE,SAAA;MAAAuB,QAAA,EAAE;IAAK,gBAAE,CAAC,eACVzB,OAAA;MAAKmC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAX,QAAA,gBAChCzB,OAAA;QAAAyB,QAAA,EAAI;MAAa;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBlC,OAAA;QAAAyB,QAAA,EAAMpB;MAAW;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA7CID,EAAE;AAAAkC,EAAA,GAAFlC,EAAE;AAgDR,eAAeA,EAAE;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}