{"ast":null,"code":"var _jsxFileName = \"D:\\\\beisong\\\\my-react-app\\\\src\\\\p1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Upload, Button, message, Spin } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst P1 = () => {\n  _s();\n  const [fileContent, setFileContent] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleBeforeUpload = file => {\n    const isTxt = file.type === 'text/plain';\n    if (!isTxt) {\n      message.error('You can only upload text files!');\n      return false;\n    }\n    return false; // 阻止文件上传到服务器\n  };\n  const handleFileChange = async info => {\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n    }\n    if (info.file.status === 'done') {\n      try {\n        const content = await readFileContent(info.file.originFileObj);\n        setFileContent(content);\n        setLoading(false);\n        console.log(content);\n      } catch (error) {\n        setLoading(false);\n        message.error('File read failed.');\n      }\n    } else if (info.file.status === 'error') {\n      setLoading(false);\n      message.error('File upload failed.');\n    }\n  };\n  const readFileContent = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = e => {\n        resolve(e.target.result);\n      };\n      reader.onerror = reject;\n      reader.readAsText(file);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Upload, {\n      beforeUpload: handleBeforeUpload,\n      onChange: handleFileChange,\n      accept: \".txt\",\n      showUploadList: false,\n      action: false // 不执行上传操作\n      ,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }, this),\n        children: \"Click to Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Spin, {\n        tip: \"Loading...\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '20px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: fileContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(P1, \"M0S1MI6dCB5lT55y1DdGJuMbnHQ=\");\n_c = P1;\nexport default P1;\nvar _c;\n$RefreshReg$(_c, \"P1\");","map":{"version":3,"names":["React","useState","Upload","Button","message","Spin","UploadOutlined","jsxDEV","_jsxDEV","P1","_s","fileContent","setFileContent","loading","setLoading","handleBeforeUpload","file","isTxt","type","error","handleFileChange","info","status","content","readFileContent","originFileObj","console","log","Promise","resolve","reject","reader","FileReader","onload","e","target","result","onerror","readAsText","children","beforeUpload","onChange","accept","showUploadList","action","icon","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","tip","padding","_c","$RefreshReg$"],"sources":["D:/beisong/my-react-app/src/p1.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Upload, Button, message, Spin } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst P1 = () => {\r\n  const [fileContent, setFileContent] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const handleBeforeUpload = (file) => {\r\n    const isTxt = file.type === 'text/plain';\r\n    if (!isTxt) {\r\n      message.error('You can only upload text files!');\r\n      return false;\r\n    }\r\n    return false; // 阻止文件上传到服务器\r\n  };\r\n\r\n\r\n  const handleFileChange = async (info) => {\r\n    if (info.file.status === 'uploading') {\r\n      setLoading(true);\r\n    }\r\n    if (info.file.status === 'done') {\r\n      try {\r\n        const content = await readFileContent(info.file.originFileObj);\r\n        setFileContent(content);\r\n        setLoading(false);\r\n        console.log(content);\r\n      } catch (error) {\r\n        setLoading(false);\r\n        message.error('File read failed.');\r\n      }\r\n    } else if (info.file.status === 'error') {\r\n      setLoading(false);\r\n      message.error('File upload failed.');\r\n    }\r\n  };\r\n\r\n\r\n  const readFileContent = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        resolve(e.target.result);\r\n      };\r\n      reader.onerror = reject;\r\n      reader.readAsText(file);\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Upload\r\n        beforeUpload={handleBeforeUpload}\r\n        onChange={handleFileChange}\r\n        accept=\".txt\"\r\n        showUploadList={false}\r\n        action={false} // 不执行上传操作\r\n      >\r\n        <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n      </Upload>\r\n      <div style={{ marginTop: '20px' }}>\r\n        <h3>File Content:</h3>\r\n        {loading? (\r\n          <Spin tip=\"Loading...\">\r\n            <div style={{ padding: '20px' }} />\r\n          </Spin>\r\n        ) : (\r\n          <pre>{fileContent}</pre>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default P1;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}