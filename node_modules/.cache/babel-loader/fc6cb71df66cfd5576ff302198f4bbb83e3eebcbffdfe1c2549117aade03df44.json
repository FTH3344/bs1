{"ast":null,"code":"var _jsxFileName = \"D:\\\\beisong\\\\my-react-app\\\\src\\\\p1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Upload, Button, message, Row, Typography } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nconst P1 = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [textareaContent, setTextareaContent] = useState(\"\");\n  const [textareaContent2, setTextareaContent2] = useState(\"\");\n  const [displayedSentences, setDisplayedSentences] = useState([]);\n  const [counter, setCounter] = useState(0);\n  const [paragraph, setParagraph] = useState(\"This is a sample paragraph. It contains several sentences. You can split it by punctuation marks. Let's see how it works.\");\n  const sentences = paragraph.split(/(?<=[。，\\s])/);\n  const handleTextareaChange = e => {\n    setTextareaContent(e.target.value);\n  };\n  const handleButtonClick_displayall = () => {\n    console.log(\"Textarea content:\", textareaContent);\n    setParagraph(textareaContent);\n  };\n  const handleButtonClick_next = () => {\n    if (counter < sentences.length) {\n      const newDisplayedSentences = [...displayedSentences, sentences[counter]];\n      setDisplayedSentences(newDisplayedSentences);\n      setCounter(prevCounter => prevCounter + 1);\n    }\n  };\n  const clearBtn = () => {\n    setDisplayedSentences([]);\n    setCounter(0);\n    setParagraph(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"a1\",\n      style: {\n        marginLeft: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"80vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            overflowY: \"auto\",\n            wordWrap: 'break-word',\n            wordBreak: 'break-all'\n          },\n          children: displayedSentences.map((sentence, index) => /*#__PURE__*/_jsxDEV(Text, {\n            style: {\n              whiteSpace: \"nowrap\"\n            },\n            children: sentence\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        value: textareaContent,\n        onChange: handleTextareaChange,\n        placeholder: \"Enter some text here\",\n        autoSize: {\n          minRows: 3,\n          maxRows: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"end\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          children: \"\\u5411\\u524D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleButtonClick_next,\n          children: \"\\u5411\\u540E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleButtonClick_displayall,\n          children: \"\\u4E0A\\u4F20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: clearBtn,\n          children: \"\\u6E05\\u7A7A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(P1, \"bSEpCXCe4Cq2Vf5uffJYIxovuJE=\");\n_c = P1;\nexport default P1;\nvar _c;\n$RefreshReg$(_c, \"P1\");","map":{"version":3,"names":["React","useState","Upload","Button","message","Row","Typography","UploadOutlined","TextArea","jsxDEV","_jsxDEV","Text","P1","_s","loading","setLoading","textareaContent","setTextareaContent","textareaContent2","setTextareaContent2","displayedSentences","setDisplayedSentences","counter","setCounter","paragraph","setParagraph","sentences","split","handleTextareaChange","e","target","value","handleButtonClick_displayall","console","log","handleButtonClick_next","length","newDisplayedSentences","prevCounter","clearBtn","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","marginLeft","display","flexDirection","height","flex","overflowY","wordWrap","wordBreak","map","sentence","index","whiteSpace","onChange","placeholder","autoSize","minRows","maxRows","justify","onClick","_c","$RefreshReg$"],"sources":["D:/beisong/my-react-app/src/p1.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Upload, Button, message, Row, Typography } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nconst { Text } = Typography;\r\nconst P1 = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [textareaContent, setTextareaContent] = useState(\"\");\r\n  const [textareaContent2, setTextareaContent2] = useState(\"\");\r\n  const [displayedSentences, setDisplayedSentences] = useState([]);\r\n  const [counter, setCounter] = useState(0);\r\n  const [paragraph, setParagraph] = useState(\r\n    \"This is a sample paragraph. It contains several sentences. You can split it by punctuation marks. Let's see how it works.\"\r\n  );\r\n  const sentences = paragraph.split(/(?<=[。，\\s])/);\r\n\r\n  const handleTextareaChange = (e) => {\r\n    setTextareaContent(e.target.value);\r\n  };\r\n\r\n  const handleButtonClick_displayall = () => {\r\n    console.log(\"Textarea content:\", textareaContent);\r\n    setParagraph(textareaContent);\r\n  };\r\n\r\n  const handleButtonClick_next = () => {\r\n    if (counter < sentences.length) {\r\n      const newDisplayedSentences = [...displayedSentences, sentences[counter]];\r\n      setDisplayedSentences(newDisplayedSentences);\r\n      setCounter((prevCounter) => prevCounter + 1);\r\n    }\r\n  };\r\n\r\n  const clearBtn = () => {\r\n    setDisplayedSentences([]);\r\n    setCounter(0);\r\n    setParagraph(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n\r\n      <div id=\"a1\" style={{ marginLeft: 10 }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", height: \"80vh\" }}>\r\n          <div style={{ flex: 1, overflowY: \"auto\" ,  wordWrap: 'break-word', wordBreak: 'break-all'}}>\r\n            {displayedSentences.map((sentence, index) => (\r\n              <Text key={index} style={{ whiteSpace: \"nowrap\" }}>\r\n                {sentence}\r\n              </Text>\r\n            ))}\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </div>\r\n        <TextArea\r\n          value={textareaContent}\r\n          onChange={handleTextareaChange}\r\n          placeholder=\"Enter some text here\"\r\n          autoSize={{ minRows: 3, maxRows: 5 }}\r\n        />\r\n        <Row justify=\"end\">\r\n          <Button>向前</Button>\r\n          <Button onClick={handleButtonClick_next}>向后</Button>\r\n          <Button onClick={handleButtonClick_displayall}>上传</Button>\r\n          <Button onClick={clearBtn}>清空</Button>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default P1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}