{"ast":null,"code":"var _jsxFileName = \"D:\\\\beisong\\\\my-react-app\\\\src\\\\p1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Upload, Button, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport TextArea from 'antd/es/input/TextArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst P1 = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const handleBeforeUpload = file => {\n    const isTxt = file.type === 'text/plain';\n    if (!isTxt) {\n      message.error('You can only upload text files.');\n      return false;\n    }\n    return false; // 不执行文件上传到服务器的操作\n  };\n  const handleFileChange = info => {\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n    } else if (info.file.status === 'done') {\n      const file = info.file.originFileObj;\n      const reader = new FileReader();\n      reader.onload = e => {\n        const content = e.target.result;\n        console.log(content); // 打印文件内容到控制台\n        setLoading(false);\n      };\n      reader.onerror = () => {\n        setLoading(false);\n        message.error('Failed to read the file.');\n      };\n      reader.readAsText(file);\n    } else if (info.file.status === 'error') {\n      setLoading(false);\n      message.error('File upload failed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u663E\\u793A\\u533A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"aaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(P1, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c = P1;\nexport default P1;\nvar _c;\n$RefreshReg$(_c, \"P1\");","map":{"version":3,"names":["React","useState","Upload","Button","message","UploadOutlined","TextArea","jsxDEV","_jsxDEV","P1","_s","loading","setLoading","handleBeforeUpload","file","isTxt","type","error","handleFileChange","info","status","originFileObj","reader","FileReader","onload","e","content","target","result","console","log","onerror","readAsText","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/beisong/my-react-app/src/p1.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Upload, Button, message } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport TextArea from 'antd/es/input/TextArea';\r\n\r\n\r\nconst P1 = () => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const handleBeforeUpload = (file) => {\r\n    const isTxt = file.type === 'text/plain';\r\n    if (!isTxt) {\r\n      message.error('You can only upload text files.');\r\n      return false;\r\n    }\r\n    return false; // 不执行文件上传到服务器的操作\r\n  };\r\n\r\n\r\n  const handleFileChange = (info) => {\r\n    if (info.file.status === 'uploading') {\r\n      setLoading(true);\r\n    } else if (info.file.status === 'done') {\r\n      const file = info.file.originFileObj;\r\n      const reader = new FileReader();\r\n\r\n\r\n      reader.onload = (e) => {\r\n        const content = e.target.result;\r\n        console.log(content); // 打印文件内容到控制台\r\n        setLoading(false);\r\n      };\r\n\r\n\r\n      reader.onerror = () => {\r\n        setLoading(false);\r\n        message.error('Failed to read the file.');\r\n      };\r\n\r\n\r\n      reader.readAsText(file);\r\n    } else if (info.file.status === 'error') {\r\n      setLoading(false);\r\n      message.error('File upload failed.');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n    \r\n        <div>\r\n            显示区\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div>\r\n            aaaaa\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n      <TextArea/>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default P1;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,MAAM,EAAEC,OAAO,QAAQ,MAAM;AAC9C,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,EAAE,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAG7C,MAAMY,kBAAkB,GAAIC,IAAI,IAAK;IACnC,MAAMC,KAAK,GAAGD,IAAI,CAACE,IAAI,KAAK,YAAY;IACxC,IAAI,CAACD,KAAK,EAAE;MACVX,OAAO,CAACa,KAAK,CAAC,iCAAiC,CAAC;MAChD,OAAO,KAAK;IACd;IACA,OAAO,KAAK,CAAC,CAAC;EAChB,CAAC;EAGD,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;IACjC,IAAIA,IAAI,CAACL,IAAI,CAACM,MAAM,KAAK,WAAW,EAAE;MACpCR,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,MAAM,IAAIO,IAAI,CAACL,IAAI,CAACM,MAAM,KAAK,MAAM,EAAE;MACtC,MAAMN,IAAI,GAAGK,IAAI,CAACL,IAAI,CAACO,aAAa;MACpC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAG/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;QACrB,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACC,MAAM;QAC/BC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC,CAAC,CAAC;QACtBd,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC;MAGDU,MAAM,CAACS,OAAO,GAAG,MAAM;QACrBnB,UAAU,CAAC,KAAK,CAAC;QACjBR,OAAO,CAACa,KAAK,CAAC,0BAA0B,CAAC;MAC3C,CAAC;MAGDK,MAAM,CAACU,UAAU,CAAClB,IAAI,CAAC;IACzB,CAAC,MAAM,IAAIK,IAAI,CAACL,IAAI,CAACM,MAAM,KAAK,OAAO,EAAE;MACvCR,UAAU,CAAC,KAAK,CAAC;MACjBR,OAAO,CAACa,KAAK,CAAC,qBAAqB,CAAC;IACtC;EACF,CAAC;EAGD,oBACET,OAAA;IAAAyB,QAAA,gBAEIzB,OAAA;MAAAyB,QAAA,EAAK;IAEL;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN7B,OAAA;MAAAyB,QAAA,EAAK;IAEL;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACR7B,OAAA,CAACF,QAAQ;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA/DID,EAAE;AAAA6B,EAAA,GAAF7B,EAAE;AAkER,eAAeA,EAAE;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}